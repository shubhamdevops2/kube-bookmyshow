apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
  labels:
    pv: mongodb-pv
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/worker1/bookmyshow/mondodb

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  selector:
    matchLabels:
      pv: mongodb-pv

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deploy
spec:
  selector:
    matchLabels:
      app: mongodb-deploy
  template:
    metadata:
      labels:
        app: mongodb-deploy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: name
                  operator: In
                  values:
                    - worker1
      tolerations:
        - key: "app"
          operator: "Equal"
          value: "blue"
          effect: "NoSchedule"
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-volume
              mountPath: /data/*
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: password
      volumes:
        - name: mongodb-volume
          persistentVolumeClaim:
            claimName: mongodb-pvc


---

apiVersion: v1
kind: Service
metadata:
  name: mongodb-svc
spec:
  selector:
    app: mongodb-deploy
  ports:
  - name: mongo
    port: 27017
    targetPort: 27017