# creating the PV for local file system
apiVersion: v1
kind: PersistentVolume
metadata:
  name: urlshorten-pv
  labels:
    pv: urlshorten-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/worker2/bookmyshow/urlshorten

---

# creating the PVC to access the above PV
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: urlshorten-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  selector:
    matchLabels:
      pv: urlshorten-pv

---

# Creating a deployment for the front-end application with affinity and tolerations to ensure it deploys specifically on the worker2 node.
# The front-end application uses a Docker image fetched from my public Docker Hub repository
# In addition, we mount the container's volume to the specified PersistentVolumeClaim (PVC)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: urlshorten-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: urlshorten-deploy
  template:
    metadata:
      labels:
        app: urlshorten-deploy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: name
                  operator: In
                  values:
                    - worker2
      tolerations:
        - key: "app"
          operator: "Equal"
          value: "red"
          effect: "NoSchedule"
      containers:
        - name: web
          image: shubhamdevops2/urlshorten:15
          imagePullPolicy: Always
          resources:
            limits:
              memory: "450Mi"
              cpu: "400m"
            requests:
              memory: "350Mi"
              cpu: "300m"
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: urlshorten-volume
              mountPath: /app
      volumes:
        - name: urlshorten-volume
          persistentVolumeClaim:
            claimName: urlshorten-pvc


---

# Create the service to connect with deployment
apiVersion: v1
kind: Service
metadata:
  name: urlshorten-svc
spec:
  selector:
    app: urlshorten-deploy
  ports:
  - name: web
    port: 3000
    targetPort: 3000


---

# Create the HPA for autoscaling of the pods base on the CPU utilization. 
# Automatic pod scaling is configured based on CPU utilization, with scaling triggered when the container's CPU utilization exceeds 70%.
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: "urlshorten-hpa"
  namespace: default
spec:
  maxReplicas: 2
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: urlshorten-deploy
  targetCPUUtilizationPercentage: 70

# Due to the limited resource we have only taken min and max repicas from 1 to 2
